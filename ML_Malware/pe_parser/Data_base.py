import pefile
import os
import pe_analyzer
import sys
import re
import pandas as pd

def data_export(mal_sample_full_path,group_name):
    result_pe_info_json=pe_analyzer.result_all(mal_sample_full_path)
    result_pe_info_json['pe_groups']=group_name
    return result_pe_info_json


def main_save_db():
    save_path = "D:\\Allinone\\BOB\\Python\\Tensflow\\samples\\mal_samples\\mal_data.csv"
    mal_directory_path="D:\\Allinone\\BOB\\Python\\Tensflow\\samples\\mal_samples"

    mal_group_directory_full_path_list = [os.path.join(mal_directory_path, mal_group) for mal_group in os.listdir(mal_directory_path) if os.path.isdir(os.path.join(mal_directory_path, mal_group))]

    for mal_group_directory in mal_group_directory_full_path_list:
        mal_sample_full_path_list=[os.path.join(mal_group_directory,mal_sample) for mal_sample in os.listdir(mal_group_directory)]
        group_name=os.path.basename(mal_group_directory)
        success_count=0
        print("Groups : {}".format(group_name))
        for mal_sample_full_path in mal_sample_full_path_list:
            try:
                result_pe_info_json=data_export(mal_sample_full_path,group_name)
            except:
                continue
            names = [key for key in result_pe_info_json.keys()]
            df = pd.read_csv(save_path, names=names)

            new_df = pd.DataFrame([result_pe_info_json])
            final_df = pd.concat([df, new_df], ignore_index=True,sort='True')
            final_df.to_csv(save_path, index=False,columns=names)
            success_count+=1
        print("\tSuccess : {} / {} ".format(success_count,len(mal_sample_full_path_list)))




if __name__=="__main__":
    main_save_db()